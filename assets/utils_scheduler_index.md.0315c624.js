import{_ as s,c as n,o as a,a as l}from"./app.1d4b18b8.js";const d=JSON.parse('{"title":"Scheduler","description":"","frontmatter":{},"headers":[],"relativePath":"utils/scheduler/index.md"}'),p={name:"utils/scheduler/index.md"},e=l(`<h1 id="scheduler" tabindex="-1">Scheduler <a class="header-anchor" href="#scheduler" aria-hidden="true">#</a></h1><p>This is a tiny scheduler which batches and runs tasks off the <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide" target="_blank" rel="noreferrer">microtask</a> queue. Heavily inspired by the work of <a href="https://github.com/maverick-js/scheduler" target="_blank" rel="noreferrer">Rahim Alwer</a></p><h1 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h1><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">Scheduler</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;@sohailalam2/abu&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">scheduler</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">new</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">Scheduler</span><span style="color:#E6E6E6;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">taskA</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {};</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">taskB</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Queue tasks.</span></span>
<span class="line"><span style="color:#9CDCFE;">scheduler</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">enqueue</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">taskA</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">scheduler</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">enqueue</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">taskB</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Be notified of a flush.</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">stop</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">scheduler</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">onFlush</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;Flushed!&#39;</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">stop</span><span style="color:#E6E6E6;">(); </span><span style="color:#6A9955;">// unsubscribe</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Schedule a flush - can be invoked more than once.</span></span>
<span class="line"><span style="color:#9CDCFE;">scheduler</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">flush</span><span style="color:#E6E6E6;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Wait for flush to complete.</span></span>
<span class="line"><span style="color:#C586C0;">await</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">scheduler</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">tick</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Synchronously flush the queue whenever desired.</span></span>
<span class="line"><span style="color:#9CDCFE;">scheduler</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">flushSync</span><span style="color:#E6E6E6;">();</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">Scheduler</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;@sohailalam2/abu&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">scheduler</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">new</span><span style="color:#002339;"> </span><span style="color:#7EB233;">Scheduler</span><span style="color:#002339;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#7EB233;">taskA</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> () </span><span style="color:#0991B6;">=&gt;</span><span style="color:#002339;"> {};</span></span>
<span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#7EB233;">taskB</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> () </span><span style="color:#0991B6;">=&gt;</span><span style="color:#002339;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;">// Queue tasks.</span></span>
<span class="line"><span style="color:#2F86D2;">scheduler</span><span style="color:#002339;">.</span><span style="color:#7EB233;">enqueue</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">taskA</span><span style="color:#002339;">);</span></span>
<span class="line"><span style="color:#2F86D2;">scheduler</span><span style="color:#002339;">.</span><span style="color:#7EB233;">enqueue</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">taskB</span><span style="color:#002339;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;">// Be notified of a flush.</span></span>
<span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">stop</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">scheduler</span><span style="color:#002339;">.</span><span style="color:#7EB233;">onFlush</span><span style="color:#002339;">(() </span><span style="color:#0991B6;">=&gt;</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#2F86D2;">console</span><span style="color:#002339;">.</span><span style="color:#7EB233;">log</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;Flushed!&#39;</span><span style="color:#002339;">);</span></span>
<span class="line"><span style="color:#002339;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7EB233;">stop</span><span style="color:#002339;">(); </span><span style="color:#357B42;">// unsubscribe</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;">// Schedule a flush - can be invoked more than once.</span></span>
<span class="line"><span style="color:#2F86D2;">scheduler</span><span style="color:#002339;">.</span><span style="color:#7EB233;">flush</span><span style="color:#002339;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;">// Wait for flush to complete.</span></span>
<span class="line"><span style="color:#7B30D0;">await</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">scheduler</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">tick</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;">// Synchronously flush the queue whenever desired.</span></span>
<span class="line"><span style="color:#2F86D2;">scheduler</span><span style="color:#002339;">.</span><span style="color:#7EB233;">flushSync</span><span style="color:#002339;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>`,4),o=[e];function c(r,t,y,i,E,u){return a(),n("div",null,o)}const D=s(p,[["render",c]]);export{d as __pageData,D as default};
