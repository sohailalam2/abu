import{_ as s,c as n,o as a,a as l}from"./app.64fdbf73.js";const b=JSON.parse('{"title":"Serialization / Deserialization","description":"","frontmatter":{},"headers":[],"relativePath":"data-helpers/value-object/serialization.md"}'),p={name:"data-helpers/value-object/serialization.md"},e=l(`<h1 id="serialization-deserialization" tabindex="-1">Serialization / Deserialization <a class="header-anchor" href="#serialization-deserialization" aria-hidden="true">#</a></h1><h2 id="json-serialization" tabindex="-1">JSON Serialization <a class="header-anchor" href="#json-serialization" aria-hidden="true">#</a></h2><p>When a Value Object is serialized to JSON, it will smartly flatten the structure by removing the internal <code>value</code> property.</p><p>From the previous section when the <a href="./create-value-object#complex-value-object">complex value object</a> is serialized, the following json output will be produced:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#E6E6E6;">{</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">&quot;simpleString&quot;</span><span style="color:#E6E6E6;">: </span><span style="color:#CE9178;">&quot;Hello World!&quot;</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">&quot;simpleNumber&quot;</span><span style="color:#E6E6E6;">: </span><span style="color:#B5CEA8;">100</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">&quot;simpleBoolean&quot;</span><span style="color:#E6E6E6;">: </span><span style="color:#569CD6;">true</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">&quot;simpleObject&quot;</span><span style="color:#E6E6E6;">: {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">&quot;name&quot;</span><span style="color:#E6E6E6;">: </span><span style="color:#CE9178;">&quot;Bruce Wayne&quot;</span></span>
<span class="line"><span style="color:#E6E6E6;">  },</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">&quot;simpleVO&quot;</span><span style="color:#E6E6E6;">: </span><span style="color:#CE9178;">&quot;Hello World!&quot;</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">&quot;nestedVO&quot;</span><span style="color:#E6E6E6;">: {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">&quot;nested&quot;</span><span style="color:#E6E6E6;">: </span><span style="color:#CE9178;">&quot;Nested Value&quot;</span></span>
<span class="line"><span style="color:#E6E6E6;">  },</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">&quot;deeplyNestedVO&quot;</span><span style="color:#E6E6E6;">: {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">&quot;deep&quot;</span><span style="color:#E6E6E6;">: {</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#9CDCFE;">&quot;nested&quot;</span><span style="color:#E6E6E6;">: </span><span style="color:#CE9178;">&quot;Deeply Nested Value&quot;</span></span>
<span class="line"><span style="color:#E6E6E6;">    }</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#002339;">{</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DC3EB7;">&quot;simpleString&quot;</span><span style="color:#002339;">: </span><span style="color:#00820F;">&quot;Hello World!&quot;</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DC3EB7;">&quot;simpleNumber&quot;</span><span style="color:#002339;">: </span><span style="color:#174781;">100</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DC3EB7;">&quot;simpleBoolean&quot;</span><span style="color:#002339;">: </span><span style="color:#174781;">true</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DC3EB7;">&quot;simpleObject&quot;</span><span style="color:#002339;">: {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#DC3EB7;">&quot;name&quot;</span><span style="color:#002339;">: </span><span style="color:#00820F;">&quot;Bruce Wayne&quot;</span></span>
<span class="line"><span style="color:#002339;">  },</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DC3EB7;">&quot;simpleVO&quot;</span><span style="color:#002339;">: </span><span style="color:#00820F;">&quot;Hello World!&quot;</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DC3EB7;">&quot;nestedVO&quot;</span><span style="color:#002339;">: {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#DC3EB7;">&quot;nested&quot;</span><span style="color:#002339;">: </span><span style="color:#00820F;">&quot;Nested Value&quot;</span></span>
<span class="line"><span style="color:#002339;">  },</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DC3EB7;">&quot;deeplyNestedVO&quot;</span><span style="color:#002339;">: {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#DC3EB7;">&quot;deep&quot;</span><span style="color:#002339;">: {</span></span>
<span class="line"><span style="color:#002339;">      </span><span style="color:#DC3EB7;">&quot;nested&quot;</span><span style="color:#002339;">: </span><span style="color:#00820F;">&quot;Deeply Nested Value&quot;</span></span>
<span class="line"><span style="color:#002339;">    }</span></span>
<span class="line"><span style="color:#002339;">  }</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="deserialization" tabindex="-1">Deserialization <a class="header-anchor" href="#deserialization" aria-hidden="true">#</a></h2><p>A serialized value object can be reconstructed easily using the <code>ValueObject.deserialize()</code> method.</p><p>The deserialization process may need some hints to convert nested value objects. This can be done by providing a <code>ValueObjectDeserializationMapper</code>.</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ValueObjectDeserializationMapper</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  [</span><span style="color:#9CDCFE;">key</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">string</span><span style="color:#E6E6E6;">]</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">Class</span><span style="color:#E6E6E6;">&lt;</span><span style="color:#4EC9B0;">ValueObject</span><span style="color:#E6E6E6;">&lt;</span><span style="color:#4EC9B0;">ValueObjectType</span><span style="color:#E6E6E6;">&gt;&gt; </span><span style="color:#D4D4D4;">|</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ValueObjectDeserializationMapper</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">abstract</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">class</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ValueObject</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">implements</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">Serializable</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#569CD6;">public</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">static</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">deserialize</span><span style="color:#E6E6E6;">&lt;</span><span style="color:#4EC9B0;">Type</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">extends</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ValueObjectType</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">string</span><span style="color:#E6E6E6;">, </span><span style="color:#4EC9B0;">K</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">extends</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ValueObject</span><span style="color:#E6E6E6;">&lt;</span><span style="color:#4EC9B0;">Type</span><span style="color:#E6E6E6;">&gt; </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ValueObject</span><span style="color:#E6E6E6;">&lt;</span><span style="color:#4EC9B0;">Type</span><span style="color:#E6E6E6;">&gt;&gt;(</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">string</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">mapper</span><span style="color:#D4D4D4;">?:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ValueObjectDeserializationMapper</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  )</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">K</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#6A9955;">// ....</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#0991B6;">interface</span><span style="color:#002339;"> </span><span style="color:#0444AC;">ValueObjectDeserializationMapper</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  [</span><span style="color:#B1108E;">key</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">string</span><span style="color:#002339;">]</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#0444AC;">Class</span><span style="color:#002339;">&lt;</span><span style="color:#0444AC;">ValueObject</span><span style="color:#002339;">&lt;</span><span style="color:#0444AC;">ValueObjectType</span><span style="color:#002339;">&gt;&gt; </span><span style="color:#7B30D0;">|</span><span style="color:#002339;"> </span><span style="color:#0444AC;">ValueObjectDeserializationMapper</span><span style="color:#002339;">;</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DA5221;">abstract</span><span style="color:#002339;"> </span><span style="color:#0991B6;">class</span><span style="color:#002339;"> </span><span style="color:#0444AC;">ValueObject</span><span style="color:#002339;"> </span><span style="color:#DA5221;">implements</span><span style="color:#002339;"> </span><span style="color:#B02767;">Serializable</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  </span><span style="color:#DA5221;">public</span><span style="color:#002339;"> </span><span style="color:#DA5221;">static</span><span style="color:#002339;"> </span><span style="color:#7EB233;">deserialize</span><span style="color:#002339;">&lt;</span><span style="color:#0444AC;">Type</span><span style="color:#002339;"> </span><span style="color:#DA5221;">extends</span><span style="color:#002339;"> </span><span style="color:#0444AC;">ValueObjectType</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">string</span><span style="color:#002339;">, </span><span style="color:#0444AC;">K</span><span style="color:#002339;"> </span><span style="color:#DA5221;">extends</span><span style="color:#002339;"> </span><span style="color:#0444AC;">ValueObject</span><span style="color:#002339;">&lt;</span><span style="color:#0444AC;">Type</span><span style="color:#002339;">&gt; </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#0444AC;">ValueObject</span><span style="color:#002339;">&lt;</span><span style="color:#0444AC;">Type</span><span style="color:#002339;">&gt;&gt;(</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#B1108E;">value</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#DC3EB7;">string</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#B1108E;">mapper</span><span style="color:#7B30D0;">?:</span><span style="color:#002339;"> </span><span style="color:#0444AC;">ValueObjectDeserializationMapper</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  )</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#0444AC;">K</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">    </span><span style="color:#357B42;font-style:italic;">// ....</span></span>
<span class="line"><span style="color:#002339;">  }</span></span>
<span class="line"><span style="color:#002339;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Example:</p><p>Referring to the previously exemplified <a href="./create-value-object#complex-value-object">complex value object</a></p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">json</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">simpleString:</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;Hello World!&#39;</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">simpleNumber:</span><span style="color:#E6E6E6;"> </span><span style="color:#B5CEA8;">100</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">simpleBoolean:</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">true</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">simpleObject:</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">name:</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;Bruce Wayne&#39;</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  },</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">simpleVO:</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;Hello World!&#39;</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">nestedVO:</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">nested:</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;Nested Value&#39;</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  },</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">deeplyNestedVO:</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#9CDCFE;">deep:</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">      </span><span style="color:#9CDCFE;">nested:</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;Deeply Nested Value&#39;</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">    },</span></span>
<span class="line"><span style="color:#E6E6E6;">  },</span></span>
<span class="line"><span style="color:#E6E6E6;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">mapper</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ValueObjectDeserializationMapper</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">simpleVO:</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">MySimpleValueObject</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">nestedVO:</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">nested:</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">MySimpleValueObject</span><span style="color:#E6E6E6;"> },</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">deeplyNestedVO:</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">deep:</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">nested:</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">MySimpleValueObject</span><span style="color:#E6E6E6;"> } },</span></span>
<span class="line"><span style="color:#E6E6E6;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">valueObject</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">MyComplexValue</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">deserialize</span><span style="color:#E6E6E6;">&lt;</span><span style="color:#4EC9B0;">ComplexValue</span><span style="color:#E6E6E6;">&gt;(</span><span style="color:#9CDCFE;">json</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">mapper</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">expect</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">result</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">simpleString</span><span style="color:#E6E6E6;">).</span><span style="color:#DCDCAA;">toEqual</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;Hello World!&#39;</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#DCDCAA;">expect</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">result</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">simpleVO</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#E6E6E6;">).</span><span style="color:#DCDCAA;">toEqual</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;Hello World!&#39;</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">json</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  simpleString: </span><span style="color:#A44185;">&#39;Hello World!&#39;</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  simpleNumber: </span><span style="color:#174781;">100</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  simpleBoolean: </span><span style="color:#174781;">true</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  simpleObject: {</span></span>
<span class="line"><span style="color:#002339;">    name: </span><span style="color:#A44185;">&#39;Bruce Wayne&#39;</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  },</span></span>
<span class="line"><span style="color:#002339;">  simpleVO: </span><span style="color:#A44185;">&#39;Hello World!&#39;</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  nestedVO: {</span></span>
<span class="line"><span style="color:#002339;">    nested: </span><span style="color:#A44185;">&#39;Nested Value&#39;</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  },</span></span>
<span class="line"><span style="color:#002339;">  deeplyNestedVO: {</span></span>
<span class="line"><span style="color:#002339;">    deep: {</span></span>
<span class="line"><span style="color:#002339;">      nested: </span><span style="color:#A44185;">&#39;Deeply Nested Value&#39;</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">    },</span></span>
<span class="line"><span style="color:#002339;">  },</span></span>
<span class="line"><span style="color:#002339;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">mapper</span><span style="color:#7B30D0;">:</span><span style="color:#002339;"> </span><span style="color:#0444AC;">ValueObjectDeserializationMapper</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> {</span></span>
<span class="line"><span style="color:#002339;">  simpleVO: </span><span style="color:#2F86D2;">MySimpleValueObject</span><span style="color:#002339;">,</span></span>
<span class="line"><span style="color:#002339;">  nestedVO: { nested: </span><span style="color:#2F86D2;">MySimpleValueObject</span><span style="color:#002339;"> },</span></span>
<span class="line"><span style="color:#002339;">  deeplyNestedVO: { deep: { nested: </span><span style="color:#2F86D2;">MySimpleValueObject</span><span style="color:#002339;"> } },</span></span>
<span class="line"><span style="color:#002339;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">valueObject</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">MyComplexValue</span><span style="color:#002339;">.</span><span style="color:#7EB233;">deserialize</span><span style="color:#002339;">&lt;</span><span style="color:#0444AC;">ComplexValue</span><span style="color:#002339;">&gt;(</span><span style="color:#2F86D2;">json</span><span style="color:#002339;">, </span><span style="color:#2F86D2;">mapper</span><span style="color:#002339;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7EB233;">expect</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">result</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">value</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">simpleString</span><span style="color:#002339;">).</span><span style="color:#7EB233;">toEqual</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;Hello World!&#39;</span><span style="color:#002339;">);</span></span>
<span class="line"><span style="color:#7EB233;">expect</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">result</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">value</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">simpleVO</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">value</span><span style="color:#002339;">).</span><span style="color:#7EB233;">toEqual</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;Hello World!&#39;</span><span style="color:#002339;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div>`,12),o=[e];function c(t,r,E,y,i,u){return a(),n("div",null,o)}const D=s(p,[["render",c]]);export{b as __pageData,D as default};
