import{_ as s,c as n,o as a,a as l}from"./app.25f29188.js";const p="/abu/assets/logo.763f25fe.png",u=JSON.parse('{"title":"Frequently Asked Questions","description":"","frontmatter":{},"headers":[],"relativePath":"get-started.md"}'),o={name:"get-started.md"},e=l('<section align="center"><br><a href="https://sohailalam2" target="_blank" rel="noopener noreferrer"><img width="180" src="'+p+`" alt="Abu Logo"></a><h1>Abu</h1><h5>Your minimalistic helpful sidekick for all typescript projects :)</h5><br></section><h1 id="frequently-asked-questions" tabindex="-1">Frequently Asked Questions <a class="header-anchor" href="#frequently-asked-questions" aria-hidden="true">#</a></h1><h2 id="\u{1F4BB}-installation" tabindex="-1">\u{1F4BB} Installation <a class="header-anchor" href="#\u{1F4BB}-installation" aria-hidden="true">#</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#E6E6E6;">$ npm install @sohailalam2/abu</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#002339;">$ npm install @sohailalam2/abu</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="\u261D\uFE0F-minimum-requirements" tabindex="-1">\u261D\uFE0F Minimum Requirements <a class="header-anchor" href="#\u261D\uFE0F-minimum-requirements" aria-hidden="true">#</a></h2><h3 id="nodejs-v16" tabindex="-1">NodeJs &gt; v16 <a class="header-anchor" href="#nodejs-v16" aria-hidden="true">#</a></h3><p>Abu uses the <code>crypto</code> module and specifically the <code>crypto.webcrypto</code> object for its random number generation. This is only available on Node v16+.</p><h2 id="abu-\u{1F435}-is-universal" tabindex="-1">Abu \u{1F435} is universal! <a class="header-anchor" href="#abu-\u{1F435}-is-universal" aria-hidden="true">#</a></h2><p>It works equally well on modern browsers as well as in the backend (NodeJs).</p><h3 id="\u{1F4DF}-backend-examples" tabindex="-1">\u{1F4DF} Backend Examples <a class="header-anchor" href="#\u{1F4DF}-backend-examples" aria-hidden="true">#</a></h3><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">data</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">=</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;Hello World!&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Utility helper methods</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">toKebabCase</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">hasValue</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;@sohailalam2/abu&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#E6E6E6;">(</span><span style="color:#DCDCAA;">toKebabCase</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">data</span><span style="color:#E6E6E6;">));</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#E6E6E6;">(</span><span style="color:#DCDCAA;">hasValue</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">data</span><span style="color:#E6E6E6;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// DateTime</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">DateTime</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;@sohailalam2/abu&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">DateTime</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">now</span><span style="color:#E6E6E6;">().</span><span style="color:#DCDCAA;">toRFC2822</span><span style="color:#E6E6E6;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// Hashing &amp; Encoding Example</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">HexToBytes</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">SHA256Hash</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;@sohailalam2/abu&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#E6E6E6;">(</span><span style="color:#569CD6;">new</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">HexToBytes</span><span style="color:#E6E6E6;">().</span><span style="color:#DCDCAA;">convert</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;FF&#39;</span><span style="color:#E6E6E6;">));</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#E6E6E6;">(</span><span style="color:#569CD6;">new</span><span style="color:#E6E6E6;"> </span><span style="color:#DCDCAA;">SHA256Hash</span><span style="color:#E6E6E6;">().</span><span style="color:#DCDCAA;">hash</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">data</span><span style="color:#E6E6E6;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// ValueObject</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">ValueObject</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;@sohailalam2/abu&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">class</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">TestValueObject</span><span style="color:#E6E6E6;"> </span><span style="color:#569CD6;">extends</span><span style="color:#E6E6E6;"> </span><span style="color:#4EC9B0;">ValueObject</span><span style="color:#E6E6E6;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">TestValueObject</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">from</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">data</span><span style="color:#E6E6E6;">));</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#0991B6;">const</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">data</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">=</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;Hello World!&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;">// Utility helper methods</span></span>
<span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">toKebabCase</span><span style="color:#002339;">, </span><span style="color:#2F86D2;">hasValue</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;@sohailalam2/abu&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#2F86D2;">console</span><span style="color:#002339;">.</span><span style="color:#7EB233;">log</span><span style="color:#002339;">(</span><span style="color:#7EB233;">toKebabCase</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">data</span><span style="color:#002339;">));</span></span>
<span class="line"><span style="color:#2F86D2;">console</span><span style="color:#002339;">.</span><span style="color:#7EB233;">log</span><span style="color:#002339;">(</span><span style="color:#7EB233;">hasValue</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">data</span><span style="color:#002339;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;">// DateTime</span></span>
<span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">DateTime</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;@sohailalam2/abu&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#2F86D2;">console</span><span style="color:#002339;">.</span><span style="color:#7EB233;">log</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">DateTime</span><span style="color:#002339;">.</span><span style="color:#7EB233;">now</span><span style="color:#002339;">().</span><span style="color:#7EB233;">toRFC2822</span><span style="color:#002339;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;">// Hashing &amp; Encoding Example</span></span>
<span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">HexToBytes</span><span style="color:#002339;">, </span><span style="color:#2F86D2;">SHA256Hash</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;@sohailalam2/abu&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#2F86D2;">console</span><span style="color:#002339;">.</span><span style="color:#7EB233;">log</span><span style="color:#002339;">(</span><span style="color:#7B30D0;">new</span><span style="color:#002339;"> </span><span style="color:#7EB233;">HexToBytes</span><span style="color:#002339;">().</span><span style="color:#7EB233;">convert</span><span style="color:#002339;">(</span><span style="color:#A44185;">&#39;FF&#39;</span><span style="color:#002339;">));</span></span>
<span class="line"><span style="color:#2F86D2;">console</span><span style="color:#002339;">.</span><span style="color:#7EB233;">log</span><span style="color:#002339;">(</span><span style="color:#7B30D0;">new</span><span style="color:#002339;"> </span><span style="color:#7EB233;">SHA256Hash</span><span style="color:#002339;">().</span><span style="color:#7EB233;">hash</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">data</span><span style="color:#002339;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;">// ValueObject</span></span>
<span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> { </span><span style="color:#2F86D2;">ValueObject</span><span style="color:#002339;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;@sohailalam2/abu&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0991B6;">class</span><span style="color:#002339;"> </span><span style="color:#0444AC;">TestValueObject</span><span style="color:#002339;"> </span><span style="color:#DA5221;">extends</span><span style="color:#002339;"> </span><span style="color:#B02767;">ValueObject</span><span style="color:#002339;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#2F86D2;">console</span><span style="color:#002339;">.</span><span style="color:#7EB233;">log</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">TestValueObject</span><span style="color:#002339;">.</span><span style="color:#7EB233;">from</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">data</span><span style="color:#002339;">));</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="\u{1F30F}-frontend-examples" tabindex="-1">\u{1F30F} Frontend Examples <a class="header-anchor" href="#\u{1F30F}-frontend-examples" aria-hidden="true">#</a></h3><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#808080;">&lt;!</span><span style="color:#569CD6;">DOCTYPE</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">html</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">html</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">lang</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;en&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">head</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">meta</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">charset</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;UTF-8&quot;</span><span style="color:#E6E6E6;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">meta</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">name</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;viewport&quot;</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">content</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#E6E6E6;"> </span><span style="color:#808080;">/&gt;</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">title</span><span style="color:#808080;">&gt;</span><span style="color:#E6E6E6;">Abu</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">title</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">head</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">body</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">id</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;app&quot;</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#E6E6E6;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">script</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">type</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;module&quot;</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;app&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;Hello World!&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// just a helper function to print some values on the DOM</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">innerHTML</span><span style="color:#D4D4D4;"> += </span><span style="color:#CE9178;">\`&lt;p style=&quot;color: #C21F39&quot;&gt; </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">fn</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&lt;/br&gt; &lt;/p&gt;\`</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">innerHTML</span><span style="color:#D4D4D4;"> += </span><span style="color:#CE9178;">\`</span><span style="color:#569CD6;">\${</span><span style="color:#DCDCAA;">eval</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">fn</span><span style="color:#D4D4D4;">)</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&lt;/br&gt;\`</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">innerHTML</span><span style="color:#D4D4D4;"> += </span><span style="color:#CE9178;">&#39;&lt;br /&gt;&lt;hr /&gt;&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// Utility helper methods</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">toKebabCase</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">hasValue</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@sohailalam2/abu&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`toKebabCase(&#39;</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">data</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&#39;)\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`hasValue(&#39;</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">data</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&#39;)\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// DateTime</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">DateTime</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@sohailalam2/abu&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`DateTime.now().toISOString()\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`DateTime.now().toRFC2822()\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// Hashing &amp; Encoding Example</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">HexToBytes</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">SHA256Hash</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@sohailalam2/abu&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`new HexToBytes().convert(&#39;FF&#39;)\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`new SHA256Hash().hash(&#39;</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">data</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&#39;)\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// ValueObject</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">ValueObject</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@sohailalam2/abu&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">TextValueObject</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">ValueObject</span><span style="color:#D4D4D4;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`TextValueObject.from(&#39;</span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">data</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&#39;)\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#6A9955;">// note as javascript does not support generics yet, we can simply use the default behavior</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">NumberValueObject</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">ValueObject</span><span style="color:#D4D4D4;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`NumberValueObject.from(123)\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">body</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">html</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#0071CE;">&lt;!</span><span style="color:#0444AC;">DOCTYPE</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;">html</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"><span style="color:#0071CE;">&lt;</span><span style="color:#0444AC;">html</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;">lang</span><span style="color:#0071CE;">=</span><span style="color:#A44185;">&quot;en&quot;</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"><span style="color:#0071CE;">  &lt;</span><span style="color:#0444AC;">head</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"><span style="color:#0071CE;">    &lt;</span><span style="color:#0444AC;">meta</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;">charset</span><span style="color:#0071CE;">=</span><span style="color:#A44185;">&quot;UTF-8&quot;</span><span style="color:#0071CE;"> /&gt;</span></span>
<span class="line"><span style="color:#0071CE;">    &lt;</span><span style="color:#0444AC;">meta</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;">name</span><span style="color:#0071CE;">=</span><span style="color:#A44185;">&quot;viewport&quot;</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;">content</span><span style="color:#0071CE;">=</span><span style="color:#A44185;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#0071CE;"> /&gt;</span></span>
<span class="line"><span style="color:#0071CE;">    &lt;</span><span style="color:#0444AC;">title</span><span style="color:#0071CE;">&gt;Abu&lt;/</span><span style="color:#0444AC;">title</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"><span style="color:#0071CE;">  &lt;/</span><span style="color:#0444AC;">head</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"><span style="color:#0071CE;">  &lt;</span><span style="color:#0444AC;">body</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"><span style="color:#0071CE;">    &lt;</span><span style="color:#0444AC;">div</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;">id</span><span style="color:#0071CE;">=</span><span style="color:#A44185;">&quot;app&quot;</span><span style="color:#0071CE;">&gt;&lt;/</span><span style="color:#0444AC;">div</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"><span style="color:#0071CE;">    &lt;</span><span style="color:#0444AC;">script</span><span style="color:#0071CE;"> </span><span style="color:#DF8618;">type</span><span style="color:#0071CE;">=</span><span style="color:#A44185;">&quot;module&quot;</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#0991B6;">const</span><span style="color:#0071CE;"> </span><span style="color:#2F86D2;">app</span><span style="color:#0071CE;"> </span><span style="color:#7B30D0;">=</span><span style="color:#0071CE;"> </span><span style="color:#2F86D2;">document</span><span style="color:#0071CE;">.</span><span style="color:#7EB233;">getElementById</span><span style="color:#0071CE;">(</span><span style="color:#A44185;">&#39;app&#39;</span><span style="color:#0071CE;">);</span></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#0991B6;">const</span><span style="color:#0071CE;"> </span><span style="color:#2F86D2;">data</span><span style="color:#0071CE;"> </span><span style="color:#7B30D0;">=</span><span style="color:#0071CE;"> </span><span style="color:#A44185;">&#39;Hello World!&#39;</span><span style="color:#0071CE;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#357B42;">// just a helper function to print some values on the DOM</span></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#0991B6;">function</span><span style="color:#0071CE;"> </span><span style="color:#7EB233;">print</span><span style="color:#0071CE;">(</span><span style="color:#B1108E;">fn</span><span style="color:#0071CE;">) {</span></span>
<span class="line"><span style="color:#0071CE;">        </span><span style="color:#2F86D2;">app</span><span style="color:#0071CE;">.</span><span style="color:#2F86D2;">innerHTML</span><span style="color:#0071CE;"> </span><span style="color:#7B30D0;">+=</span><span style="color:#0071CE;"> </span><span style="color:#A44185;">\`&lt;p style=&quot;color: #C21F39&quot;&gt; \${</span><span style="color:#2F86D2;">fn</span><span style="color:#A44185;">}&lt;/br&gt; &lt;/p&gt;\`</span><span style="color:#0071CE;">;</span></span>
<span class="line"><span style="color:#0071CE;">        </span><span style="color:#2F86D2;">app</span><span style="color:#0071CE;">.</span><span style="color:#2F86D2;">innerHTML</span><span style="color:#0071CE;"> </span><span style="color:#7B30D0;">+=</span><span style="color:#0071CE;"> </span><span style="color:#A44185;">\`\${</span><span style="color:#7EB233;">eval</span><span style="color:#A44185;">(</span><span style="color:#2F86D2;">fn</span><span style="color:#A44185;">)</span><span style="color:#A44185;">}&lt;/br&gt;\`</span><span style="color:#0071CE;">;</span></span>
<span class="line"><span style="color:#0071CE;">        </span><span style="color:#2F86D2;">app</span><span style="color:#0071CE;">.</span><span style="color:#2F86D2;">innerHTML</span><span style="color:#0071CE;"> </span><span style="color:#7B30D0;">+=</span><span style="color:#0071CE;"> </span><span style="color:#A44185;">&#39;&lt;br /&gt;&lt;hr /&gt;&#39;</span><span style="color:#0071CE;">;</span></span>
<span class="line"><span style="color:#0071CE;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#357B42;">// Utility helper methods</span></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#7B30D0;">import</span><span style="color:#0071CE;"> { </span><span style="color:#2F86D2;">toKebabCase</span><span style="color:#0071CE;">, </span><span style="color:#2F86D2;">hasValue</span><span style="color:#0071CE;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#0071CE;"> </span><span style="color:#A44185;">&#39;@sohailalam2/abu&#39;</span><span style="color:#0071CE;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#7EB233;">print</span><span style="color:#0071CE;">(</span><span style="color:#A44185;">\`toKebabCase(&#39;\${</span><span style="color:#2F86D2;">data</span><span style="color:#A44185;">}&#39;)\`</span><span style="color:#0071CE;">);</span></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#7EB233;">print</span><span style="color:#0071CE;">(</span><span style="color:#A44185;">\`hasValue(&#39;\${</span><span style="color:#2F86D2;">data</span><span style="color:#A44185;">}&#39;)\`</span><span style="color:#0071CE;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#357B42;">// DateTime</span></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#7B30D0;">import</span><span style="color:#0071CE;"> { </span><span style="color:#2F86D2;">DateTime</span><span style="color:#0071CE;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#0071CE;"> </span><span style="color:#A44185;">&#39;@sohailalam2/abu&#39;</span><span style="color:#0071CE;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#7EB233;">print</span><span style="color:#0071CE;">(</span><span style="color:#A44185;">\`DateTime.now().toISOString()\`</span><span style="color:#0071CE;">);</span></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#7EB233;">print</span><span style="color:#0071CE;">(</span><span style="color:#A44185;">\`DateTime.now().toRFC2822()\`</span><span style="color:#0071CE;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#357B42;">// Hashing &amp; Encoding Example</span></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#7B30D0;">import</span><span style="color:#0071CE;"> { </span><span style="color:#2F86D2;">HexToBytes</span><span style="color:#0071CE;">, </span><span style="color:#2F86D2;">SHA256Hash</span><span style="color:#0071CE;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#0071CE;"> </span><span style="color:#A44185;">&#39;@sohailalam2/abu&#39;</span><span style="color:#0071CE;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#7EB233;">print</span><span style="color:#0071CE;">(</span><span style="color:#A44185;">\`new HexToBytes().convert(&#39;FF&#39;)\`</span><span style="color:#0071CE;">);</span></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#7EB233;">print</span><span style="color:#0071CE;">(</span><span style="color:#A44185;">\`new SHA256Hash().hash(&#39;\${</span><span style="color:#2F86D2;">data</span><span style="color:#A44185;">}&#39;)\`</span><span style="color:#0071CE;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#357B42;">// ValueObject</span></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#7B30D0;">import</span><span style="color:#0071CE;"> { </span><span style="color:#2F86D2;">ValueObject</span><span style="color:#0071CE;"> } </span><span style="color:#7B30D0;">from</span><span style="color:#0071CE;"> </span><span style="color:#A44185;">&#39;@sohailalam2/abu&#39;</span><span style="color:#0071CE;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#0991B6;">class</span><span style="color:#0071CE;"> </span><span style="color:#0444AC;">TextValueObject</span><span style="color:#0071CE;"> </span><span style="color:#DA5221;">extends</span><span style="color:#0071CE;"> </span><span style="color:#B02767;">ValueObject</span><span style="color:#0071CE;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#7EB233;">print</span><span style="color:#0071CE;">(</span><span style="color:#A44185;">\`TextValueObject.from(&#39;\${</span><span style="color:#2F86D2;">data</span><span style="color:#A44185;">}&#39;)\`</span><span style="color:#0071CE;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#357B42;">// note as javascript does not support generics yet, we can simply use the default behavior</span></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#0991B6;">class</span><span style="color:#0071CE;"> </span><span style="color:#0444AC;">NumberValueObject</span><span style="color:#0071CE;"> </span><span style="color:#DA5221;">extends</span><span style="color:#0071CE;"> </span><span style="color:#B02767;">ValueObject</span><span style="color:#0071CE;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#0071CE;">      </span><span style="color:#7EB233;">print</span><span style="color:#0071CE;">(</span><span style="color:#A44185;">\`NumberValueObject.from(123)\`</span><span style="color:#0071CE;">);</span></span>
<span class="line"><span style="color:#0071CE;">    &lt;/</span><span style="color:#0444AC;">script</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"><span style="color:#0071CE;">  &lt;/</span><span style="color:#0444AC;">body</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"><span style="color:#0071CE;">&lt;/</span><span style="color:#0444AC;">html</span><span style="color:#0071CE;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br></div></div><h2 id="debugging" tabindex="-1">Debugging <a class="header-anchor" href="#debugging" aria-hidden="true">#</a></h2><h3 id="typeerror-webcrypto" tabindex="-1">TypeError <code>webcrypto</code> <a class="header-anchor" href="#typeerror-webcrypto" aria-hidden="true">#</a></h3><blockquote><p>My tests are failing because of a cryptic error message: <code>TypeError: Cannot read properties of undefined (reading &#39;webcrypto&#39;)</code></p></blockquote><p>Abu uses &#39;webcrypto&#39; implementation to generate random numbers that are then used by the <a href="./crypto/id-generators">id-generators</a>. Unfortunately, many test environments do not provide an implementation for the same. However, we can easily define it as follows:</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#6A9955;">// in some spec.ts file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">crypto</span><span style="color:#E6E6E6;"> </span><span style="color:#C586C0;">from</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">&#39;docs/crypto/index&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">Object</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">defineProperty</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">globalThis</span><span style="color:#E6E6E6;">, </span><span style="color:#CE9178;">&#39;crypto&#39;</span><span style="color:#E6E6E6;">, {</span></span>
<span class="line"><span style="color:#E6E6E6;">  </span><span style="color:#9CDCFE;">value:</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">webcrypto:</span><span style="color:#E6E6E6;"> </span><span style="color:#9CDCFE;">crypto</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">webcrypto</span><span style="color:#E6E6E6;"> },</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#357B42;">// in some spec.ts file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B30D0;">import</span><span style="color:#002339;"> </span><span style="color:#2F86D2;">crypto</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">from</span><span style="color:#002339;"> </span><span style="color:#A44185;">&#39;docs/crypto/index&#39;</span><span style="color:#002339;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#2F86D2;">Object</span><span style="color:#002339;">.</span><span style="color:#7EB233;">defineProperty</span><span style="color:#002339;">(</span><span style="color:#2F86D2;">globalThis</span><span style="color:#002339;">, </span><span style="color:#A44185;">&#39;crypto&#39;</span><span style="color:#002339;">, {</span></span>
<span class="line"><span style="color:#002339;">  value: { webcrypto: </span><span style="color:#2F86D2;">crypto</span><span style="color:#002339;">.</span><span style="color:#2F86D2;">webcrypto</span><span style="color:#002339;"> },</span></span>
<span class="line"><span style="color:#002339;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,18),t=[e];function c(r,y,i,E,D,C){return a(),n("div",null,t)}const m=s(o,[["render",c]]);export{u as __pageData,m as default};
